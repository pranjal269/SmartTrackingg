{"ast":null,"code":"import axios from'axios';// Configure your ngrok URL here (replace with your actual ngrok URL)\nconst NGROK_URL='https://f63e-103-180-214-187.ngrok-free.app/api';// Make sure to include /api path\nconst AZURE_URL='https://smart-tracking-backend.azurewebsites.net/api';// Use ngrok for development and Azure as fallback\nconst getApiBaseUrl=()=>{// For local development or testing with ngrok\nif(NGROK_URL&&NGROK_URL!=='YOUR_NGROK_URL'){return NGROK_URL;}// Fallback to Azure for production\nreturn AZURE_URL;};const apiClient=axios.create({headers:{'Content-Type':'application/json'}});// Set the base URL dynamically for each request\napiClient.interceptors.request.use(config=>{var _config$method;// Set baseURL for each request\nconfig.baseURL=getApiBaseUrl();console.log('API Request:',(_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),config.baseURL+config.url);return config;});// Add response interceptor to log responses\napiClient.interceptors.response.use(response=>{console.log('API Response:',response.status,response.data);return response;},error=>{var _error$response,_error$response2,_error$config,_error$config2;console.error('API Error:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status,((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data)||error.message);console.error('Request URL:',((_error$config=error.config)===null||_error$config===void 0?void 0:_error$config.baseURL)+((_error$config2=error.config)===null||_error$config2===void 0?void 0:_error$config2.url));return Promise.reject(error);});export default apiClient;","map":{"version":3,"names":["axios","NGROK_URL","AZURE_URL","getApiBaseUrl","apiClient","create","headers","interceptors","request","use","config","_config$method","baseURL","console","log","method","toUpperCase","url","response","status","data","error","_error$response","_error$response2","_error$config","_error$config2","message","Promise","reject"],"sources":["/Users/pranjalagarwal/Documents/smartTrackingfinal/SmartTrackingg/parcel-tracking-frontend/src/api/apiClient.js"],"sourcesContent":["import axios from 'axios';\n\n// Configure your ngrok URL here (replace with your actual ngrok URL)\nconst NGROK_URL = 'https://f63e-103-180-214-187.ngrok-free.app/api'; // Make sure to include /api path\nconst AZURE_URL = 'https://smart-tracking-backend.azurewebsites.net/api';\n\n// Use ngrok for development and Azure as fallback\nconst getApiBaseUrl = () => {\n  // For local development or testing with ngrok\n  if (NGROK_URL && NGROK_URL !== 'YOUR_NGROK_URL') {\n    return NGROK_URL;\n  }\n  \n  // Fallback to Azure for production\n  return AZURE_URL;\n};\n\nconst apiClient = axios.create({\n  headers: { 'Content-Type': 'application/json' }\n});\n\n// Set the base URL dynamically for each request\napiClient.interceptors.request.use(config => {\n  // Set baseURL for each request\n  config.baseURL = getApiBaseUrl();\n  \n  console.log('API Request:', config.method?.toUpperCase(), config.baseURL + config.url);\n  \n  return config;\n});\n\n// Add response interceptor to log responses\napiClient.interceptors.response.use(\n  response => {\n    console.log('API Response:', response.status, response.data);\n    return response;\n  },\n  error => {\n    console.error('API Error:', error.response?.status, error.response?.data || error.message);\n    console.error('Request URL:', error.config?.baseURL + error.config?.url);\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,SAAS,CAAG,iDAAiD,CAAE;AACrE,KAAM,CAAAC,SAAS,CAAG,sDAAsD,CAExE;AACA,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACA,GAAIF,SAAS,EAAIA,SAAS,GAAK,gBAAgB,CAAE,CAC/C,MAAO,CAAAA,SAAS,CAClB,CAEA;AACA,MAAO,CAAAC,SAAS,CAClB,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGJ,KAAK,CAACK,MAAM,CAAC,CAC7BC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAChD,CAAC,CAAC,CAEF;AACAF,SAAS,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,EAAI,KAAAC,cAAA,CAC3C;AACAD,MAAM,CAACE,OAAO,CAAGT,aAAa,CAAC,CAAC,CAEhCU,OAAO,CAACC,GAAG,CAAC,cAAc,EAAAH,cAAA,CAAED,MAAM,CAACK,MAAM,UAAAJ,cAAA,iBAAbA,cAAA,CAAeK,WAAW,CAAC,CAAC,CAAEN,MAAM,CAACE,OAAO,CAAGF,MAAM,CAACO,GAAG,CAAC,CAEtF,MAAO,CAAAP,MAAM,CACf,CAAC,CAAC,CAEF;AACAN,SAAS,CAACG,YAAY,CAACW,QAAQ,CAACT,GAAG,CACjCS,QAAQ,EAAI,CACVL,OAAO,CAACC,GAAG,CAAC,eAAe,CAAEI,QAAQ,CAACC,MAAM,CAAED,QAAQ,CAACE,IAAI,CAAC,CAC5D,MAAO,CAAAF,QAAQ,CACjB,CAAC,CACDG,KAAK,EAAI,KAAAC,eAAA,CAAAC,gBAAA,CAAAC,aAAA,CAAAC,cAAA,CACPZ,OAAO,CAACQ,KAAK,CAAC,YAAY,EAAAC,eAAA,CAAED,KAAK,CAACH,QAAQ,UAAAI,eAAA,iBAAdA,eAAA,CAAgBH,MAAM,CAAE,EAAAI,gBAAA,CAAAF,KAAK,CAACH,QAAQ,UAAAK,gBAAA,iBAAdA,gBAAA,CAAgBH,IAAI,GAAIC,KAAK,CAACK,OAAO,CAAC,CAC1Fb,OAAO,CAACQ,KAAK,CAAC,cAAc,CAAE,EAAAG,aAAA,CAAAH,KAAK,CAACX,MAAM,UAAAc,aAAA,iBAAZA,aAAA,CAAcZ,OAAO,IAAAa,cAAA,CAAGJ,KAAK,CAACX,MAAM,UAAAe,cAAA,iBAAZA,cAAA,CAAcR,GAAG,EAAC,CACxE,MAAO,CAAAU,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAjB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}